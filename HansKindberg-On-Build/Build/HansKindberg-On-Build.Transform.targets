<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
	<PropertyGroup xdt:Transform="Insert">
		<!--
			***************************************************************************************
			
			Previous elements are from HansKindberg-Xml-Transformation-On-Build.targets
			
			Next elements are from HansKindberg-On-Build.Transform.targets
			
			***************************************************************************************
		-->
	</PropertyGroup>
	<PropertyGroup xdt:Transform="Insert">
		<CopyFilesToTargetDirectoryDependsOn>
			BeforeCopyFilesToTargetDirectory;
			CoreCopyFilesToTargetDirectory;
			AfterCopyFilesToTargetDirectory
		</CopyFilesToTargetDirectoryDependsOn>
		<CoreCopyFilesToTargetDirectoryDependsOn />
	</PropertyGroup>
	<Target Name="AfterCopyFilesToTargetDirectory" xdt:Transform="Insert" />
	<Target Name="BeforeCopyFilesToTargetDirectory" xdt:Transform="Insert" />
	<Target
		Name="CopyFilesToTargetDirectory"
		AfterTargets="AfterBuild"
		DependsOnTargets="$(CopyFilesToTargetDirectoryDependsOn)"
		xdt:Transform="Insert"
	/>
	<Target
		Name="CoreCopyFilesToTargetDirectory"
		Condition="Exists($(OutDir)) AND @(FileToCopyToTargetDirectory) != ''"
		DependsOnTargets="$(CoreCopyFilesToTargetDirectoryDependsOn)"
		xdt:Transform="Insert"
	>
		<Message
			Condition="!Exists('$(OutDir)%(RecursiveDir)%(Filename)%(Extension)') OR $([System.DateTime]::Parse('%(ModifiedTime)').Ticks) > $([System.IO.File]::GetLastWriteTime('$(OutDir)%(RecursiveDir)%(Filename)%(Extension)').Ticks)"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCopyFilesToTargetDirectory': Copying '%(FileToCopyToTargetDirectory.FullPath)' to '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)'."
		/>
		<Copy
			Condition="!Exists('$(OutDir)%(RecursiveDir)%(Filename)%(Extension)') OR $([System.DateTime]::Parse('%(ModifiedTime)').Ticks) > $([System.IO.File]::GetLastWriteTime('$(OutDir)%(RecursiveDir)%(Filename)%(Extension)').Ticks)"
			DestinationFiles="$(OutDir)%(RecursiveDir)%(Filename)%(Extension)"
            SourceFiles="%(FileToCopyToTargetDirectory.FullPath)"
		/>
	</Target>
</Project>